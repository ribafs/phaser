Any GameObject can be made interactive.

To do so, we must call the setInteractive() method on it:

text = this.add.text(100, 100, 'test')
text.setInteractive()

Once a GameObject is interactive, it can listen for events.

This is done using the on() method. We pass an event name, and a callback function that’s executed when the event occurs:

text.on('pointerup', function () {})

pointerup is just one of the mouse events we can listen for. We also have:

    pointerdown
    pointerdownoutside
    pointerup
    pointerupoutside
    pointermove
    pointerover
    pointerout
    wheel

This is just the beginning. We have many advanced mouse (and touch events) controls at our disposal.

gameobjectdown is a more general event that is fired when any interactive element is clicked, and it’s not fired on an object, but on this.input:

this.input.on('gameobjectdown', () => {})

https://flaviocopes.com/phaser-mouse-input/


Mouse wheel
Introduction

Mouse wheel events of phaser.

    Author: Richard Davey

Usage
Mouse wheel events

    Events on touched Game object

gameObject.on('wheel', function(pointer, dx, dy, dz, event){ /* ... */ });

Event on input plugin for each touched Game object

scene.input.on('gameobjectwheel', function(pointer, gameObject, dx, dy, dz, event){ /* ... */ });

Events to get all touched Game Objects

    scene.input.on('wheel', function(pointer, currentlyOver, dx, dy, dz, event){ /* ... */ });

Mouse wheel properties

    pointer.deltaX : The horizontal scroll amount that occurred due to the user moving a mouse wheel or similar input device.
    pointer.deltaY : The vertical scroll amount that occurred due to the user moving a mouse wheel or similar input device.
    pointer.deltaZ : The z-axis scroll amount that occurred due to the user moving a mouse wheel or similar input device.


