<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.jsdelivr.net/npm/phaser@3.55.2/dist/phaser.min.js"></script>
    <title>TÃ­tulo</title>
    <style>
html, body {
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  background: #111;
  color: #eee;
  font: caption;
}

#version {
  position: absolute;
  left: 5px;
  top: 5px;
}
    </style>
</head>
<body>
    <footer><div id=version></div></footer>

    <script>
document.getElementById("version").textContent = "Phaser v" + Phaser.VERSION;

var config = {
  type: Phaser.AUTO,
  width: 800,
  height: 600,
  loader: {
    baseURL: "https://labs.phaser.io",
    crossOrigin: "anonymous"
  },
  scene: {
    preload: preload,
    create: create,
    update: update
  }
};

var origin, arrow, arrowSnap, text;

var SNAP_INTERVAL = Phaser.Math.PI2 / 8;

var directions = {
  "-180": "w",
  "-135": "nw",
  "-90": "n",
  "-45": "ne",
  0: "e",
  45: "se",
  90: "s",
  135: "sw",
  180: "w"
};

new Phaser.Game(config);

function preload() {
  this.load.image("arrow", "assets/sprites/longarrow-white.png");
}

function create() {
  text = this.add.text(20, 40, "", { font: "16px monospace", fill: "violet" });
  arrow = this.add
    .image(400, 300, "arrow")
    .setAlpha(0.5)
    .setOrigin(0, 0.5)
    .setTint(0xffdd00);
  arrowSnap = this.add
    .image(400, 300, "arrow")
    .setAlpha(0.5)
    .setOrigin(0, 0.5)
    .setTint(0x00ddff);

  this.input.on(
    "pointermove",
    function (pointer) {
      var angle = Phaser.Math.Angle.Between(
        arrow.x,
        arrow.y,
        pointer.worldX,
        pointer.worldY
      );
      var angleSnap = Phaser.Math.Snap.To(angle, SNAP_INTERVAL);
      var angleSnapDeg = Phaser.Math.RadToDeg(angleSnap);
      var angleSnapDir = directions[angleSnapDeg];

      arrow.rotation = angle;
      arrowSnap.rotation = angleSnap;

      text.setText([
        `angle:      ${angle.toFixed(2)} rad  ${Phaser.Math.RadToDeg(
          angle
        ).toFixed(2)} deg`,
        `snapped:    ${angleSnap.toFixed(2)} rad  ${angleSnapDeg.toFixed(
          2
        )} deg`,
        `direction:  ${angleSnapDir}`
      ]);
    },
    this
  );
}

function update() {}

    </script>
</body>
</html>
